<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzy.malllearningmybatis.dao.UmsAdminDao">
    <select id="selectByIdSimple" parameterType="Long" resultType="com.zzy.malllearningmybatis.model.UmsAdmin">
        select username,
               password,
               icon,
               email,
               nick_name,
               note,
               create_time,
               login_time,
               status
        from ums_admin
        where id = #{id}
    </select>
    <select id="selectByIds" resultType="com.zzy.malllearningmybatis.model.UmsAdmin">
        select
        id,
        username,
        password,
        icon,
        email,
        nick_name,
        note,
        create_time,
        login_time,
        status
        from ums_admin
        where id in
        <foreach collection="ids" separator="," item="id" open="(" close=")">
            #{id}
        </foreach>
    </select>
    <insert id="insert">
        <selectKey resultType="long" order="AFTER" keyProperty="id">
            select LAST_INSERT_ID()
        </selectKey>
        insert into ums_admin(username, password, icon, email, nick_name, note, create_time, login_time)
        values (#{username},#{password},#{icon},#{email},#{nickName},#{note},#{createTime},#{loginTime})
    </insert>
    <insert id="insert2">
        insert into ums_admin(username, password, icon, email, nick_name, note, create_time, login_time)
        values (#{username}, #{password}, #{icon}, #{email}, #{nickName}, #{note}, #{createTime}, #{loginTime})
        <selectKey keyColumn="id" resultType="long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    <!--批量插入-->
    <insert id="insertBatch">
        insert into ums_admin(username, password, icon, email, nick_name, note, create_time, login_time)
        values
        <foreach collection="umsAdmins" item="umsAdmin" separator=",">
            (#{umsAdmin.username},#{umsAdmin.password},#{umsAdmin.icon},
            #{umsAdmin.email},#{umsAdmin.nickName},#{umsAdmin.note},
            #{umsAdmin.createTime},#{umsAdmin.loginTime})
        </foreach>
    </insert>
    <update id="updateById">
        update ums_admin
        set username    = #{username},
            password    = #{password},
            icon        = #{icon},
            email       = #{email},
            nick_name   = #{nickName},
            note        = #{note},
            create_time = #{createTime},
            login_time  = #{loginTime}
        where id = #{id}
    </update>
    <update id="updateByIdSelective">
        update ums_admin
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="icon != null and icon != ''">
                icon = #{icon},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="nickName != null and nickName != ''">
                nick_name = #{nickName},
            </if>
            <if test="note != null and note != ''">
                note = #{note},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="loginTime != null">
                login_time = #{loginTime},
            </if>
        </set>
        where id = #{id}
    </update>
    <delete id="deleteById">
        delete
        from ums_admin
        where id = #{id}
    </delete>
    <select id="selectByUsernameAndEmailLike" resultType="com.zzy.malllearningmybatis.model.UmsAdmin">
        select
        id,username,password,icon,email,nick_name,note,create_time,login_time
        from ums_admin
        where 1 = 1
        <if test="#{username} != null">
            and username like concat("%",#{username},"%")
        </if>
        <if test="#{email} != null">
            and email like concat("%",#{email},"%")
        </if>
    </select>
    <select id="selectByUsernameAndEmailLike2" resultType="com.zzy.malllearningmybatis.model.UmsAdmin">
        select
        id,username,password,icon,email,nick_name,note,create_time,login_time
        from ums_admin
        where 1 = 1
        <choose>
            <when test="username != null and username != ''">
                and username like concat("%",#{username},"%")
            </when>
            <when test="email != null and email != ''">
                or email like concat("%",#{email},"%"))
            </when>
            <otherwise>
                and 1 = 2
            </otherwise>
        </choose>
    </select>
    <select id="selectByUsernameAndEmailLike3" resultType="com.zzy.malllearningmybatis.model.UmsAdmin">
        select
        id,username,password,icon,email,nick_name,note,create_time,login_time
        from ums_admin
        <where>
            <if test="username != null and username != ''">
                and username like concat("%",#{username},"%")
            </if>
            <if test="email != null and email != ''">
                and email like concat("%",#{email},"%")
            </if>
        </where>
    </select>
</mapper>